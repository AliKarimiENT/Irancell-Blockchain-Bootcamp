{
	"id": "5e8306b13c430acc3834d192f8101dc1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Multi_Sign_Wallet.sol": {
				"content": "pragma solidity ^0.8.*;\r\ncontract MultiSignWallet {\r\n    address private _owner;\r\n    // a mapping from address to uint which contains two part\r\n    // first part is our owner address\r\n    // second part is an amount that owener wants to add on transaction\r\n    mapping (address => uint) private _owners;\r\n    uint constant MIN_SIGNATURE = 2;\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Multi_Sign_Wallet.sol": {
				"MultiSignWallet": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Multi_Sign_Wallet.sol\":25:351  contract MultiSignWallet {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Multi_Sign_Wallet.sol\":25:351  contract MultiSignWallet {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f117aa714399fef1ce67c00712c6943781d226419c29697ccdf503c9c4df73dc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f117aa714399fef1ce67c00712c6943781d226419c29697ccdf503c9c4df73dc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL OR 0xAA PUSH18 0x4399FEF1CE67C00712C6943781D226419C29 PUSH10 0x7CCDF503C9C4DF73DC64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "25:326:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220f117aa714399fef1ce67c00712c6943781d226419c29697ccdf503c9c4df73dc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL OR 0xAA PUSH18 0x4399FEF1CE67C00712C6943781D226419C29 PUSH10 0x7CCDF503C9C4DF73DC64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "25:326:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 351,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 351,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 351,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 351,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f117aa714399fef1ce67c00712c6943781d226419c29697ccdf503c9c4df73dc64736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 351,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Multi_Sign_Wallet.sol\":\"MultiSignWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Multi_Sign_Wallet.sol\":{\"keccak256\":\"0x6df565a35f6168757991a5488a4b2ef2c22af221980292d670a424f375e5218d\",\"urls\":[\"bzz-raw://d2b2f4da8c980e3004aedd30eb6677f2bc53c6cdd47598cfe59b954d7496fb09\",\"dweb:/ipfs/QmRKfQwiWs8XEVuyaxJ4Cng3y6eJfcD6PEWRURCkKkbq8i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Multi_Sign_Wallet.sol:MultiSignWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 7,
								"contract": "contracts/Multi_Sign_Wallet.sol:MultiSignWallet",
								"label": "_owners",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Multi_Sign_Wallet.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Multi_Sign_Wallet.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Multi_Sign_Wallet.sol": {
				"ast": {
					"absolutePath": "contracts/Multi_Sign_Wallet.sol",
					"exportedSymbols": {
						"MultiSignWallet": [
							11
						]
					},
					"id": 12,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".",
								"*"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "MultiSignWallet",
							"nameLocation": "34:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "73:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "57:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "57:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "296:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "262:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 6,
										"keyType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "271:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "262:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 5,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "282:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 10,
									"mutability": "constant",
									"name": "MIN_SIGNATURE",
									"nameLocation": "324:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 11,
									"src": "310:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "310:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "340:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								}
							],
							"scope": 12,
							"src": "25:326:0",
							"usedErrors": []
						}
					],
					"src": "0:351:0"
				},
				"id": 0
			}
		}
	}
}