{
	"id": "6e674205fc5e282e02b8a022e5390d96",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Multi_Sign_Wallet.sol": {
				"content": "pragma solidity ^0.8.*;\r\ncontract MultiSignWallet {\r\n    address private _owner;\r\n    // a mapping from address to uint which contains two part\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Multi_Sign_Wallet.sol": {
				"MultiSignWallet": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Multi_Sign_Wallet.sol\":25:146  contract MultiSignWallet {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Multi_Sign_Wallet.sol\":25:146  contract MultiSignWallet {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6f6f0099bdb9802e6ee9ac13ec22cca1acf90a895ec4c91bceb4206b490ca0164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a6f6f0099bdb9802e6ee9ac13ec22cca1acf90a895ec4c91bceb4206b490ca0164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xF6 CREATE MULMOD SWAP12 0xDB SWAP9 MUL 0xE6 0xEE SWAP11 0xC1 RETURNDATACOPY 0xC2 0x2C 0xCA BYTE 0xCF SWAP1 0xA8 SWAP6 0xEC 0x4C SWAP2 0xBC 0xEB TIMESTAMP MOD 0xB4 SWAP1 0xCA ADD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "25:121:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220a6f6f0099bdb9802e6ee9ac13ec22cca1acf90a895ec4c91bceb4206b490ca0164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xF6 CREATE MULMOD SWAP12 0xDB SWAP9 MUL 0xE6 0xEE SWAP11 0xC1 RETURNDATACOPY 0xC2 0x2C 0xCA BYTE 0xCF SWAP1 0xA8 SWAP6 0xEC 0x4C SWAP2 0xBC 0xEB TIMESTAMP MOD 0xB4 SWAP1 0xCA ADD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "25:121:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 146,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 146,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 146,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 146,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 146,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 146,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 146,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 146,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6f6f0099bdb9802e6ee9ac13ec22cca1acf90a895ec4c91bceb4206b490ca0164736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 146,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 146,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Multi_Sign_Wallet.sol\":\"MultiSignWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Multi_Sign_Wallet.sol\":{\"keccak256\":\"0x3302d7702348877b2f65a8d05052851b31d2a548e64ad825d3c25e63bccc3c41\",\"urls\":[\"bzz-raw://9939a5af30c4f39755725c65cb2a15fd8ec756339ee76443237a9fc17c5ae888\",\"dweb:/ipfs/QmXECvtuWVxGfbP3nnqdhoyAD1y74ocdqQQ3FCkRcnzXKw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Multi_Sign_Wallet.sol:MultiSignWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Multi_Sign_Wallet.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Multi_Sign_Wallet.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Multi_Sign_Wallet.sol": {
				"ast": {
					"absolutePath": "contracts/Multi_Sign_Wallet.sol",
					"exportedSymbols": {
						"MultiSignWallet": [
							4
						]
					},
					"id": 5,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".",
								"*"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4,
							"linearizedBaseContracts": [
								4
							],
							"name": "MultiSignWallet",
							"nameLocation": "34:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "73:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 4,
									"src": "57:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "57:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 5,
							"src": "25:121:0",
							"usedErrors": []
						}
					],
					"src": "0:146:0"
				},
				"id": 0
			}
		}
	}
}