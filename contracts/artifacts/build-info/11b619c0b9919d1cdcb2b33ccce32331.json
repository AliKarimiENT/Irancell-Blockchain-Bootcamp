{
	"id": "11b619c0b9919d1cdcb2b33ccce32331",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Auction.sol": {
				"content": "pragma solidity ^0.8.*;\r\n\r\ncontract Auction{\r\n    struct Post {\r\n        address payable seller;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Auction.sol": {
				"Auction": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Auction.sol\":27:106  contract Auction{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Auction.sol\":27:106  contract Auction{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e4e4e09acc564bbc5492c1bb666046c947d1a3a102eb22d28d4c35a492045d8f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e4e4e09acc564bbc5492c1bb666046c947d1a3a102eb22d28d4c35a492045d8f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xE4 0xE0 SWAP11 0xCC JUMP 0x4B 0xBC SLOAD SWAP3 0xC1 0xBB PUSH7 0x6046C947D1A3A1 MUL 0xEB 0x22 0xD2 DUP14 0x4C CALLDATALOAD LOG4 SWAP3 DIV 0x5D DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "27:79:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e4e4e09acc564bbc5492c1bb666046c947d1a3a102eb22d28d4c35a492045d8f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xE4 0xE0 SWAP11 0xCC JUMP 0x4B 0xBC SLOAD SWAP3 0xC1 0xBB PUSH7 0x6046C947D1A3A1 MUL 0xEB 0x22 0xD2 DUP14 0x4C CALLDATALOAD LOG4 SWAP3 DIV 0x5D DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "27:79:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 106,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 106,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 106,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 106,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 106,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 106,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 106,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 106,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 106,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 106,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 106,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4e4e09acc564bbc5492c1bb666046c947d1a3a102eb22d28d4c35a492045d8f64736f6c63430008070033",
									".code": [
										{
											"begin": 27,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 106,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"keccak256\":\"0x8d1eadf5f8495c6f9f71644c22f0c5a8686dcf7e7105771ef8b658f25e21fb9f\",\"urls\":[\"bzz-raw://51aa60624ce1b669001f88537356c559b0eb8712b78350bafa1ce89dc18355f1\",\"dweb:/ipfs/QmWJHoQfren2wz2wdVFJpJVtxp4CeRdZjHRusizSm8jNfs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Auction.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Auction.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Auction.sol": {
				"ast": {
					"absolutePath": "contracts/Auction.sol",
					"exportedSymbols": {
						"Auction": [
							5
						]
					},
					"id": 6,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".",
								"*"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5,
							"linearizedBaseContracts": [
								5
							],
							"name": "Auction",
							"nameLocation": "36:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Auction.Post",
									"id": 4,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "89:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 4,
											"src": "73:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "73:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Post",
									"nameLocation": "57:4:0",
									"nodeType": "StructDefinition",
									"scope": 5,
									"src": "50:53:0",
									"visibility": "public"
								}
							],
							"scope": 6,
							"src": "27:79:0",
							"usedErrors": []
						}
					],
					"src": "0:106:0"
				},
				"id": 0
			}
		}
	}
}